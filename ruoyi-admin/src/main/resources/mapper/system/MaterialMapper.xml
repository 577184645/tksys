<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.MaterialMapper">
    
    <resultMap type="Material" id="MaterialResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="materialcode"    column="materialcode"    />
        <result property="partnumber"    column="partnumber"    />
        <result property="description"    column="description"    />
        <result property="footprint"    column="footprint"    />
        <result property="manufacture"    column="manufacture"    />
        <result property="typeId"    column="type_id"    />
        <result property="deptId"    column="dept_id"    />
    </resultMap>





    <sql id="selectMaterialVo">
        select m.id,m.materialcode,m.type_id,m.dept_id from mat_list  m LEFT JOIN mat_listchild m1
                                                                 on m.id=m1.material_id left JOIN mat_type m2 on  m2.dept_id=m.dept_id
 </sql>

    <select id="selectMaterialList"  resultMap="MaterialResult">
        <include refid="selectMaterialVo" />
        <where>
            <if test="name != null  and name != ''"> and m1.name like concat('%', #{name}, '%')</if>
            <if test="footprint != null  and footprint != ''"> and m1.footprint like concat('%', #{footprint}, '%')</if>
            <if test="partnumber != null  and partnumber != ''">and m1.partnumber  like concat('%', #{partnumber}, '%')</if>
            <if test="materialcode != null  and materialcode != ''">and m.materialcode  like concat('%', #{materialcode}, '%')</if>
            <if test="manufacture != null  and manufacture != ''">and m1.manufacture  like concat('%', #{manufacture}, '%')</if>
            <if test="description != null  and description != ''">and m1.description  like concat('%', #{description}, '%')</if>
            <if test="deptId != null and deptId != 0">
                AND (m.type_id = #{deptId} OR m.type_id IN ( SELECT m2.dept_id FROM mat_type t WHERE FIND_IN_SET (#{deptId},ancestors) ))
            </if>
        </where>
        group by  m.materialcode
    </select>





    <select id="selectMaterialMaxMaterialcode" resultType="String" >
        select max(materialcode) from mat_list
        where left(materialcode, 4)=#{materialcode};
    </select>




    <select id="selectMaterialById"  resultMap="MaterialResult">
        <include refid="selectMaterialVo"/>
        where id = #{id}
    </select>



    <insert id="insertMaterial"  useGeneratedKeys="true" keyProperty="id">
        insert into mat_list(type_id,dept_id,materialcode) values (#{typeId},#{deptId},#{materialcode})
    </insert>



    <delete id="deleteMaterialById" >
        delete from mat_list where id = #{id}
    </delete>


    
</mapper>