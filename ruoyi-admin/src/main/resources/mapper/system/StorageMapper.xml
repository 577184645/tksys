<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.StorageMapper">
    
    <resultMap type="Storage" id="StorageResult">
        <result property="id"    column="id"    />
        <result property="materialcode"    column="materialcode"    />
        <result property="price"    column="price"    />
        <result property="stocks"    column="stocks"    />
        <result property="money"    column="money"    />
        <result property="typeId"    column="type_id"    />
        <result property="deptId"    column="dept_id"    />
        <result property="materialId"    column="material_id"    />
        <result property="cTime"    column="c_time"    />
        <result property="uTime"    column="u_time"    />
        <result property="oTime"    column="o_time"    />
        <result property="qTime"    column="q_time"    />
        <result property="ancestors"    column="ancestors"    />
        <result property="deptName"    column="dept_name"    />
        <result property="name"    column="name"    />
        <result property="materialcode"    column="materialcode"    />
        <result property="partnumber"    column="partnumber"    />
        <result property="description"    column="description"    />
        <result property="footprint"    column="footprint"    />
        <result property="manufacture"    column="manufacture"    />
        <association property="storagetype" column="dept_id" javaType="Storagetype" >
        </association>
    </resultMap>



    <resultMap id="StorageWarehouseRecord" type="com.ruoyi.system.vo.WarehouseBillVo">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="description"    column="description"    />
        <result property="materialcode"    column="materialcode"    />
        <result property="partnumber"    column="partnumber"    />
        <result property="unit"    column="unit"    />
        <result property="inprice"    column="inprice"    />
        <result property="inmoney"    column="inmoney"    />
        <result property="incount"    column="incount"    />
        <result property="outmoney"    column="outmoney"    />
        <result property="outprice"    column="outprice"    />
        <result property="outcount"    column="outcount"    />
        <result property="thiscount"    column="thiscount"    />
        <result property="thismoney"    column="thismoney"    />
        <result property="thisprice"    column="thisprice"    />
        <result property="number"    column="number"    />



    </resultMap>

    <select id="selectStoragebyDate" resultMap="StorageWarehouseRecord">
SELECT number,m.materialcode materialcode,m.`name` `name`,m.partnumber partnumber,m.description description,m.unit unit,sum(count) as incount, round((SUM(w.money)/sum(count)),2) as inprice,SUM(w.money) inmoney FROM warehouse_record w left JOIN material m
on w.materialcode=m.materialcode

WHERE DATE_FORMAT(#{date}, '%Y%m' ) = DATE_FORMAT(w.c_time , '%Y%m' ) and w.type=1
GROUP BY materialcode
    </select>

    <select id="selectoutStoragebyDate" resultMap="StorageWarehouseRecord">
SELECT number,m.materialcode materialcode,m.`name` `name`,m.partnumber partnumber,m.description description,m.unit unit,sum(count) as outcount, round((SUM(w.money)/sum(count)),2) as outprice,SUM(w.money) outmoney FROM warehouse_record w left JOIN material m
on w.materialcode=m.materialcode

WHERE DATE_FORMAT(#{date}, '%Y%m' ) = DATE_FORMAT(w.c_time , '%Y%m' ) and w.type=2
GROUP BY materialcode
    </select>



    <select id="selectStoragebyDatedashed" resultMap="StorageWarehouseRecord">
SELECT number,m.materialcode materialcode,m.`name` `name`,m.partnumber partnumber,m.description description,m.unit unit,sum(count) as incount, round((SUM(w.money)/sum(count)),2) as inprice,SUM(w.money) inmoney FROM warehouse_record w left JOIN material m
on w.materialcode=m.materialcode
WHERE DATE_FORMAT(#{date}, '%Y%m' ) = DATE_FORMAT( w.c_time , '%Y%m' ) and w.type=4
GROUP BY materialcode
    </select>






    <select id="selectoutStoragebyDatedashed" resultMap="StorageWarehouseRecord">
SELECT number,m.materialcode materialcode,m.`name` `name`,m.partnumber partnumber,m.description description,m.unit unit,sum(count) as outcount, round((SUM(w.money)/sum(count)),2) as outprice,SUM(w.money) outmoney
FROM warehouse_record w left JOIN material m
on w.materialcode=m.materialcode
WHERE DATE_FORMAT(#{date}, '%Y%m' ) = DATE_FORMAT( w.c_time , '%Y%m' ) and w.type=5
GROUP BY materialcode
    </select>


    <sql id="selectStorageVo">
        select id, materialcode, price, stocks, money, type_id from storage
    </sql>

    <select id="StoragefindList" resultMap="StorageResult">
    select id, name, materialcode, partnumber, footprint, manufacture, unit, avg(price) price, sum(stocks) stocks, sum(money) money, type_id, serial_number,  c_time, u_time from storage
     group by  materialcode
    </select>


    <select id="selectStorageListBymaterialcode" resultMap="StorageResult">
         select m.description, u.id,m.leadtime,u.`name`, o_time,u.materialcode, q_time,u.partnumber, m.footprint, u.manufacture, u.unit, u.serial_number, u.type_id,   avg(price) price,sum(stocks) stocks,sum(money) money,u.c_time,u.u_time from storage u  LEFT JOIN storagetype d
        on u.type_id=d.dept_id LEFT JOIN material m on m.materialcode=u.materialcode
        where   u.materialcode = #{materialcode}
   and stocks>0
    </select>

    <select id="selectStorageList" parameterType="Storage" resultMap="StorageResult">
        select s.material_id,s.id,m.materialcode,price,stocks,money,ancestors,dept_name, s.u_time,o_time,q_time from `storage`  s
        LEFT JOIN storagetype s1  on type_id=dept_id
        left JOIN material   m   on m.materialcode=s.materialcode
        left join material_child m1 on m.id=m1.material_id
        <where>
         <if test="name != null  and name != ''"> and m1.name like concat('%', #{name}, '%')</if>
            <if test="description != null  and description != ''"> and m1.description like concat('%', #{description}, '%')</if>
            <if test="footprint != null  and footprint != ''"> and m1.footprint like concat('%', #{footprint}, '%')</if>
            <if test="partnumber != null  and partnumber != ''"> and m1.partnumber like concat('%', #{partnumber}, '%')</if>
            <if test="manufacture != null  and manufacture != ''"> and m1.manufacture = #{manufacture}</if>
            <if test="materialcode != null  and materialcode != ''"> and s.materialcode = #{materialcode}</if>
            <if test="status==2 "> and stocks > 0</if>
            <if test="status==1 "> and stocks = 0</if>
            <if test="deptId != null and deptId != 0">
                AND (s.type_id = #{deptId} OR s.type_id IN ( SELECT t.dept_id FROM storagetype t WHERE FIND_IN_SET (#{deptId},ancestors) ))
            </if>
        </where>


    </select>

    <select id="selectStorageById"  resultMap="StorageResult">
        <include refid="selectStorageVo"/>
        where id = #{id}
    </select>

    <select id="selectByBom"  resultMap="StorageResult">
        <include refid="selectStorageVo"/>
        where partnumber like concat('%',#{comments},'%')
        and   footprint like concat('%',#{footprint},'%')

    </select>

        
    <insert id="insertStorage" parameterType="Storage" useGeneratedKeys="true" keyProperty="id">
        insert into storage (materialcode,price,stocks,money,type_id,material_id,u_time)
        values  (#{materialcode},#{price},#{stocks},#{money},#{typeId},#{materialId},now())
    </insert>



    <delete id="deleteStorageById" parameterType="Integer">
        delete from storage where id = #{id}
    </delete>



    <delete id="deleteStorageByIds" parameterType="String">
        delete from storage where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>



    <select id="selectStorageInfoByMaterialcodeAndTypeid" resultMap="StorageResult">
        <include refid="selectStorageVo"/>
        where
        materialcode=#{materialcode}
        and type_id=#{typeId}
    </select>


    <select id="selectStorageByMaterialcode" resultMap="StorageResult">

        <include refid="selectStorageVo"/>
        where
        materialcode=#{materialcode}

    </select>



    <update id="updateStorageByMaterialcodeAndTypeId">
         update  storage set stocks=#{stocks},money=#{money},price=#{price},
         u_time=now()  where materialcode=#{materialcode} and type_id=#{typeId}
    </update>




    <!--出库-->
    <update id="updateStorageById">
        update  storage set
        <if test="price != null">
            price=#{price},
        </if>
        <if test="oTime != null">
             o_time=now(),
        </if>
        <if test="qTime != null">
             q_time=now(),
        </if>
        stocks=#{stocks},money=#{money}
          where id=#{id}
    </update>



</mapper>