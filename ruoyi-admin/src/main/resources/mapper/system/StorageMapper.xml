<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.StorageMapper">
    
    <resultMap type="Storage" id="StorageResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="description"    column="description"    />
        <result property="materialcode"    column="materialcode"    />
        <result property="partnumber"    column="partnumber"    />
        <result property="footprint"    column="footprint"    />
        <result property="manufacture"    column="manufacture"    />
        <result property="unit"    column="unit"    />
        <result property="supplier"    column="supplier"    />
        <result property="leadtime"    column="leadtime"    />
        <result property="price"    column="price"    />
        <result property="stocks"    column="stocks"    />
        <result property="money"    column="money"    />
        <result property="typeId"    column="type_id"    />
        <result property="serialNumber"    column="serial_number"    />
        <result property="cTime"    column="c_time"    />
        <result property="uTime"    column="u_time"    />
        <result property="oTime"    column="o_time"    />
        <result property="qTime"    column="q_time"    />
        <result property="ancestors"    column="ancestors"    />
        <result property="deptName"    column="dept_name"    />
        <result property="leadtime"    column="leadtime"    />




        <association property="storagetype" column="dept_id" javaType="Storagetype" resultMap="StoragetypeResult">

        </association>
    </resultMap>

    <resultMap id="StoragetypeResult" type="Storagetype">
        <id     property="deptId"   column="dept_id"     />
        <result property="parentId" column="parent_id"   />
        <result property="deptName" column="dept_name"   />
        <result property="orderNum" column="order_num"   />
        <result property="leader"   column="leader"      />
        <result property="status"   column="dept_status" />
    </resultMap>


    <resultMap id="StorageWarehouseRecord" type="com.ruoyi.system.vo.WarehouseBillVo">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="description"    column="description"    />
        <result property="materialcode"    column="materialcode"    />
        <result property="partnumber"    column="partnumber"    />
        <result property="unit"    column="unit"    />
        <result property="inprice"    column="inprice"    />
        <result property="inmoney"    column="inmoney"    />
        <result property="supplier"    column="supplier"    />
        <result property="incount"    column="incount"    />
        <result property="outmoney"    column="outmoney"    />
        <result property="outprice"    column="outprice"    />
        <result property="outcount"    column="outcount"    />
        <result property="thiscount"    column="thiscount"    />
        <result property="thismoney"    column="thismoney"    />
        <result property="thisprice"    column="thisprice"    />
        <result property="number"    column="number"    />



    </resultMap>

    <select id="selectStoragebyDate" resultMap="StorageWarehouseRecord">
SELECT number,m.materialcode materialcode,m.`name` `name`,m.partnumber partnumber,m.description description,m.unit unit,sum(count) as incount, round((SUM(w.money)/sum(count)),2) as inprice,SUM(w.money) inmoney, w.supplier supplier FROM warehouse_record w left JOIN material m
on w.materialcode=m.materialcode

WHERE DATE_FORMAT(#{date}, '%Y%m' ) = DATE_FORMAT(w.c_time , '%Y%m' ) and w.type=1
GROUP BY supplier,materialcode
    </select>

    <select id="selectoutStoragebyDate" resultMap="StorageWarehouseRecord">
SELECT number,m.materialcode materialcode,m.`name` `name`,m.partnumber partnumber,m.description description,m.unit unit,sum(count) as outcount, round((SUM(w.money)/sum(count)),2) as outprice,SUM(w.money) outmoney, w.supplier supplier FROM warehouse_record w left JOIN material m
on w.materialcode=m.materialcode

WHERE DATE_FORMAT(#{date}, '%Y%m' ) = DATE_FORMAT(w.c_time , '%Y%m' ) and w.type=2
GROUP BY supplier,materialcode
    </select>



    <select id="selectStoragebyDatedashed" resultMap="StorageWarehouseRecord">
SELECT number,m.materialcode materialcode,m.`name` `name`,m.partnumber partnumber,m.description description,m.unit unit,sum(count) as incount, round((SUM(w.money)/sum(count)),2) as inprice,SUM(w.money) inmoney, w.supplier supplier FROM warehouse_record w left JOIN material m
on w.materialcode=m.materialcode
WHERE DATE_FORMAT(#{date}, '%Y%m' ) = DATE_FORMAT( w.c_time , '%Y%m' ) and w.type=4
GROUP BY supplier,materialcode
    </select>






    <select id="selectoutStoragebyDatedashed" resultMap="StorageWarehouseRecord">
SELECT number,m.materialcode materialcode,m.`name` `name`,m.partnumber partnumber,m.description description,m.unit unit,sum(count) as outcount, round((SUM(w.money)/sum(count)),2) as outprice,SUM(w.money) outmoney, w.supplier supplier FROM warehouse_record w left JOIN material m
on w.materialcode=m.materialcode
WHERE DATE_FORMAT(#{date}, '%Y%m' ) = DATE_FORMAT( w.c_time , '%Y%m' ) and w.type=5
GROUP BY supplier,materialcode
    </select>


    <sql id="selectStorageVo">
        select id, name, supplier,materialcode, partnumber, footprint, manufacture, unit, price, stocks, money, type_id, serial_number,  c_time, u_time from storage
    </sql>

    <select id="StoragefindList" resultMap="StorageResult">
    select id, name, supplier,materialcode, partnumber, footprint, manufacture, unit, avg(price) price, sum(stocks) stocks, sum(money) money, type_id, serial_number,  c_time, u_time from storage
     group by  supplier,materialcode
    </select>


    <select id="selectStorageListBymaterialcode" resultMap="StorageResult">
         select m.description, u.id,m.leadtime,u.`name`, o_time,u.materialcode, q_time,supplier,u.partnumber, m.footprint, u.manufacture, u.unit, u.serial_number, u.type_id,   avg(price) price,sum(stocks) stocks,sum(money) money,u.c_time,u.u_time from storage u  LEFT JOIN storagetype d
        on u.type_id=d.dept_id LEFT JOIN material m on m.materialcode=u.materialcode
        where   u.materialcode = #{materialcode}
   and stocks>0
    </select>

    <select id="selectStorageList" parameterType="Storage" resultMap="StorageResult">
        select m.leadtime,d.dept_name,d.ancestors ancestors,m.description, u.id, u.`name`, o_time,u.materialcode, q_time,supplier,u.partnumber, u.footprint, u.manufacture, u.unit, u.serial_number, u.type_id, price price,stocks,money,u.c_time,u.u_time from storage u LEFT JOIN storagetype d on u.type_id=d.dept_id LEFT JOIN material m on m.materialcode=u.materialcode where 1=1
            <if test="name != null  and name != ''"> and u.name like concat('%', #{name}, '%')</if>
        <if test="description != null  and description != ''"> and m.description like concat('%', #{description}, '%')</if>
        <if test="footprint != null  and footprint != ''"> and m.footprint like concat('%', #{footprint}, '%')</if>

        <if test="partnumber != null  and partnumber != ''"> and u.partnumber like concat('%', #{partnumber}, '%')</if>
        <if test="manufacture != null  and manufacture != ''"> and u.manufacture = #{manufacture}</if>
        <if test="materialcode != null  and materialcode != ''"> and u.materialcode = #{materialcode}</if>
        <if test="status==2 "> and stocks > 0</if>
        <if test="status==1 "> and stocks = 0</if>

        <if test="deptId != null and deptId != 0">
                AND (u.type_id = #{deptId} OR u.type_id IN ( SELECT t.dept_id FROM storagetype t WHERE FIND_IN_SET (#{deptId},ancestors) ))
            </if>
            <if test="uTime != null "> and u_time = #{uTime}</if>
        GROUP BY u.materialcode,serial_number,supplier,u.type_id
    </select>

    <select id="selectStorageById"  resultMap="StorageResult">
        <include refid="selectStorageVo"/>
        where id = #{id}
    </select>

    <select id="selectByBom"  resultMap="StorageResult">
        <include refid="selectStorageVo"/>
        where partnumber like concat('%',#{comments},'%')
        and   footprint like concat('%',#{footprint},'%')

    </select>

        
    <insert id="insertStorage" parameterType="Storage" useGeneratedKeys="true" keyProperty="id">
        insert into storage
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null  and name != ''">name,</if>
            <if test="supplier != null  and supplier != ''">supplier,</if>
            <if test="materialcode != null  and materialcode != ''">materialcode,</if>
            <if test="partnumber != null  and partnumber != ''">partnumber,</if>
            <if test="footprint != null  and footprint != ''">footprint,</if>
            <if test="manufacture != null  and manufacture != ''">manufacture,</if>
            <if test="unit != null  and unit != ''">unit,</if>
            <if test="price != null ">price,</if>
            <if test="stocks != null ">stocks,</if>
            <if test="money != null ">money,</if>
            <if test="typeId != null ">type_id,</if>
            <if test="serialNumber != null ">serial_number,</if>
            <if test="cTime != null ">c_time,</if>
               u_time,
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null  and name != ''">#{name},</if>
            <if test="supplier != null  and supplier != ''">#{supplier},</if>
            <if test="materialcode != null  and materialcode != ''">#{materialcode},</if>
            <if test="partnumber != null  and partnumber != ''">#{partnumber},</if>
            <if test="footprint != null  and footprint != ''">#{footprint},</if>
            <if test="manufacture != null  and manufacture != ''">#{manufacture},</if>
            <if test="unit != null  and unit != ''">#{unit},</if>
            <if test="price != null ">#{price},</if>
            <if test="stocks != null ">#{stocks},</if>
            <if test="money != null ">#{money},</if>
            <if test="typeId != null ">#{typeId},</if>
            <if test="serialNumber != null ">#{serialNumber},</if>
            <if test="cTime != null ">#{cTime},</if>
               now(),
         </trim>
    </insert>

    <update id="updateStorage" parameterType="Storage">
        update storage
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null  and name != ''">name = #{name},</if>
            <if test="supplier != null  and supplier != ''">supplier = #{supplier},</if>
            <if test="materialcode != null  and materialcode != ''">materialcode = #{materialcode},</if>
            <if test="partnumber != null  and partnumber != ''">partnumber = #{partnumber},</if>
            <if test="footprint != null  and footprint != ''">footprint = #{footprint},</if>
            <if test="manufacture != null  and manufacture != ''">manufacture = #{manufacture},</if>
            <if test="unit != null  and unit != ''">unit = #{unit},</if>
            <if test="price != null ">price = #{price},</if>
            <if test="stocks != null ">stocks = #{stocks},</if>
            <if test="money != null ">money = #{money},</if>
            <if test="typeId != null ">type_id = #{typeId},</if>
            <if test="serialNumber != null ">serial_number = #{serialNumber},</if>
            <if test="cTime != null ">c_time = #{cTime},</if>
            <if test="uTime != null ">u_time = #{uTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteStorageById" parameterType="Integer">
        delete from storage where id = #{id}
    </delete>

    <delete id="deleteStorageByStocksZero" >
        delete from storage where stocks = 0
    </delete>


    <delete id="deleteStorageByIds" parameterType="String">
        delete from storage where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectStorageByMaterialcodeAndTypeid" resultType="int">
        select count(1) from storage where
        materialcode=#{materialcode}
        and type_id=#{typeId}
         and   serial_number=#{serialNumber}
         and   supplier=#{supplier}
    </select>
    <select id="selectStorageInfoByMaterialcodeAndTypeid" resultMap="StorageResult">

         <include refid="selectStorageVo"/>
       where
        materialcode=#{materialcode}
        and type_id=#{typeId}
         and   serial_number=#{serialNumber}
         and   supplier=#{supplier}
    </select>


    <select id="selectStorageByMaterialcode" resultMap="StorageResult">

        <include refid="selectStorageVo"/>
        where
        materialcode=#{materialcode}

    </select>






    <update id="updatestocks">
        update  storage set stocks=stocks+#{stocks},money=money+#{money},price=#{price},u_time=now()  where materialcode=#{materialcode} and type_id=#{typeId}
           and   serial_number=#{serialNumber}
         and   supplier=#{supplier}
    </update>

  <!--入库红冲-->
    <update id="updatereducestocks">
        update  storage set stocks=stocks-#{stocks},money=money-#{money} where
        id=#{id}
    </update>

    <!--出库红冲-->
    <update id="updateaddstocks">
        update  storage set stocks=stocks+#{stocks},money=money+#{money}   where
        id=#{id}
    </update>


    <update id="updateMaterial">
    update  storage set name=#{name},partnumber=#{partnumber},footprint=#{footprint},unit=#{unit},manufacture=#{manufacture} where materialcode=#{materialcode}
    </update>

    <!--出库-->
    <update id="removestocks">
        update  storage set  stocks=stocks-#{stocks},money=money-#{money},o_time=now()  where id=#{id}
    </update>

    <!--退库-->
    <update id="quitstocks">
        update  storage set stocks=stocks+#{stocks},money=money+#{money},q_time=now()  where id=#{id}
    </update>

</mapper>